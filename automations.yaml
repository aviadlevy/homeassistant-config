- id: night_environment_routine
  alias: Night environment routine
  description: ''
  trigger:
  - platform: time
    at: '18:30:00'
    id: 'on'
  - platform: time
    id: 'off'
    at: input_datetime.morning_routine_baseline
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Away
  action:
  - if:
    - condition: trigger
      id:
      - 'on'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.smart_plug_kids_bedroom
    else:
    - if:
      - condition: state
        entity_id: binary_sensor.is_school_vacation
        state: 'on'
      then:
      - delay:
          hours: 0
          minutes: '{{ states(''input_number.morning_vacation_delay'') | int }}

            '
          seconds: 0
          milliseconds: 0
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.smart_plug_kids_bedroom
    - service: fan.turn_off
      data: {}
      target:
        entity_id:
        - fan.kids_fan
        - fan.living_room_fan
      enabled: false
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.wled_backlight_tv
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.is_raining
          state: 'off'
      then:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.switcher_runner
      else:
      - service: cover.set_cover_position
        target:
          entity_id:
          - cover.switcher_runner
        data:
          position: 19
  mode: single
- id: backlight_tv
  alias: Backlight TV
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.mitv_2
    to: 'on'
    id: turn_on
    for:
      hours: 0
      minutes: 0
      seconds: 5
    enabled: true
  - platform: state
    entity_id:
    - media_player.mitv_2
    id: turn_off
    from: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
    enabled: true
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - if:
    - condition: trigger
      id: turn_on
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.mitv_adb
        state: 'off'
    then:
    - condition: state
      entity_id: light.wled_backlight_tv
      state: 'off'
    - wait_for_trigger:
      - platform: state
        entity_id:
        - media_player.mitv_adb
        to: 'on'
      timeout:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.hyperion_activation
    - service: light.turn_on
      data:
        color_temp: 330
        brightness_pct: 50
        effect: Solid
        transition: 10
      target:
        entity_id: light.wled_backlight_tv
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.hyperion_activation
    - delay:
        hours: 0
        minutes: 0
        seconds: 7
        milliseconds: 0
    - service: light.turn_off
      data:
        transition: 20
      target:
        entity_id: light.wled_backlight_tv
  mode: queued
  max: 10
- id: alert_sleep_notification
  alias: Alert sleep notification
  description: ''
  trigger:
  - platform: time
    at: '22:30:00'
  condition:
  - condition: state
    entity_id: media_player.mitv_adb
    state: playing
  action:
  - repeat:
      until:
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.mitv_adb
          state: 'off'
        - condition: state
          entity_id: media_player.mitv_adb
          state: unavailable
      sequence:
      - service: notify.mi_tv
        data:
          message: לישון?
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
  mode: single
- id: mode_changer_shabbat
  alias: Mode changer - Shabbat
  description: Turns Shabbos Mode ON/OFF depending on existing mode
  trigger:
  - platform: state
    entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{trigger.to_state.state == ''on''}}'
      - condition: state
        entity_id: input_select.mode
        state: Home
      - condition: state
        entity_id: binary_sensor.is_early_shabbat
        state: 'off'
      sequence:
      - delay:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: input_select.mode
          state: Home
        then:
        - service: input_select.select_option
          target:
            entity_id: input_select.mode
          data:
            option: Shabbat
    - conditions:
      - condition: template
        value_template: '{{trigger.to_state.state == ''on''}}'
      - condition: state
        entity_id: input_select.mode
        state: Home
      - condition: state
        state: 'on'
        entity_id: binary_sensor.is_early_shabbat
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.mode
        data:
          option: Shabbat
    - conditions:
      - condition: template
        value_template: '{{trigger.to_state.state == ''off''}}'
      - condition: state
        entity_id: input_select.mode
        state: Shabbat
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.mode
        data:
          option: Home
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.guests
          - input_boolean.guests_shabbat_dinner
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.delay_shabbat
        enabled: true
    default: []
  mode: single
- id: shabbat_0
  alias: Shabbat 0 - shabbat entrance routine
  description: On mode change to shabbat mode, activate the scene and notify
  trigger:
  - entity_id: input_select.mode
    platform: state
    to: Shabbat
  condition: []
  action:
  - service: notify.mobile_app_aviad_phone
    data:
      message: רוטינות שבת החלה
      data:
        tag: shabbat-mode
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.shabbat_0_sunset
    enabled: true
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.mitv
      - media_player.mitv_adb
    enabled: true
  - service: script.set_up_sonos_group
    data: {}
  - service: chime_tts.say
    data:
      message: שבת נכנסת! השבת נקרא את פרשת...
      chime_path: choir
      cache: true
      announce: true
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - service: chime_tts.say
    data:
      message: '{{ states(''sensor.jewish_calendar_parshat_hashavua'') }}'
      chime_path: classical
      announce: true
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - service: chime_tts.say
    data:
      message: "השבת {% if states('input_boolean.guests_shabbat_dinner') == 'on'\n
        %}יש{% else %}אין{% endif %} אורחים! לא לשכוח לכבות את האור במקרר!"
      cache: true
      announce: true
      tts_platform: google_translate
      end_chime_path: fanfare
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id:
      - media_player.sonos_living_room
  - service: media_player.play_media
    data:
      media_content_type: playlist
      media_content_id: https://open.spotify.com/playlist/07c13wipxpcwEl7eMRJRjk?si=n9VqYEgVS-GOBmbloM3eiw&dd=1
    target:
      entity_id: media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: playing
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      attribute: media_title
  - service: media_player.media_stop
    data: {}
    target:
      entity_id: media_player.sonos_living_room
  - service: media_player.shuffle_set
    data:
      shuffle: false
    target:
      entity_id:
      - media_player.sonos_living_room
      - media_player.sonos_kitchen
  - service: media_player.clear_playlist
    data: {}
    target:
      entity_id:
      - media_player.sonos_living_room
      - media_player.sonos_kitchen
  - service: media_player.volume_set
    metadata: {}
    data:
      volume_level: 0.4
    target:
      entity_id:
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
- id: mode_changer_away
  alias: Mode changer - Away
  description: Turns Away Mode ON/OFF depending on existing mode
  trigger:
  - platform: state
    entity_id: group.family
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{trigger.to_state.state == ''not_home''}}'
      - condition: state
        entity_id: input_select.mode
        state: Home
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.mode
        data:
          option: Away
    - conditions:
      - condition: template
        value_template: '{{trigger.to_state.state == ''home''}}'
      - condition: state
        entity_id: input_select.mode
        state: Away
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.mode
        data:
          option: Home
    default: []
  mode: single
- id: shabbat_5
  alias: Shabbat 5 - shabbat exists routine
  description: On mode change to shabbat mode, activate the scene and notify
  trigger:
  - entity_id:
    - input_select.mode
    platform: state
    from: Shabbat
  condition: []
  action:
  - service: script.set_up_sonos_group
    data: {}
  - service: chime_tts.say
    data:
      message: שבת יצאה. שבוע טוב לכולם
      chime_path: choir
      cache: true
      announce: true
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: media_player.unjoin
    data: {}
    target:
      entity_id:
      - media_player.sonos_living_room
      - media_player.sonos_kitchen
      - media_player.sonos_kids_bedroom
  - service: notify.mobile_app_aviad_phone
    data:
      message: clear_notification
      data:
        tag: shabbat-mode
  - service: media_player.volume_set
    metadata: {}
    data:
      volume_level: 0.25
    target:
      entity_id:
      - media_player.sonos_living_room
      - media_player.sonos_kitchen
  mode: single
- id: lights_out
  alias: Lights out
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      enabled: true
      state: Shabbat
  - condition: state
    entity_id: person.noga
    state: not_home
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.lights_out
    metadata: {}
  mode: single
- id: kitchen_md
  alias: Kitchen motion detection
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_motion_sensor
    from: 'off'
    to: 'on'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
    - condition: state
      entity_id: person.noga
      state: home
  - condition: time
    after: 07:00:00
    enabled: true
    before: '18:00:00'
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.kitchen_switch
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.kitchen_occupancy_sensor_occupancy
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 5
        seconds: 0
    timeout:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
  - condition: time
    before: '18:00:00'
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.kitchen_switch
  mode: single
- id: bed_md
  alias: Bed motion detection
  description: ''
  trigger:
  - platform: state
    from: 'off'
    to: 'on'
    entity_id: binary_sensor.bed_motion_sensor
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: and
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.projector
        state: unavailable
      - condition: state
        entity_id: media_player.projector
        state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.mibox
        state: unavailable
      - condition: state
        entity_id: media_player.mibox
        state: 'off'
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.bed_led_strip
  - wait_for_trigger:
    - platform: state
      from: 'on'
      to: 'off'
      entity_id: binary_sensor.bed_motion_sensor
    timeout:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - delay:
      hours: 0
      minutes: 0
      seconds: 40
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.bed_led_strip
  mode: restart
- id: light_on_door
  alias: Lights on when opening door
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.door_sensor
    to: 'on'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
  - condition: or
    conditions:
    - condition: state
      state: below_horizon
      entity_id: sun.sun
    - condition: numeric_state
      entity_id: cover.switcher_runner
      below: 10
      attribute: current_position
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id:
      - light.entrance_bulb
  - if:
    - condition: time
      before: 00:00:00
      after: '19:00:00'
    then:
    - service: light.turn_on
      continue_on_error: true
      data: {}
      target:
        entity_id:
        - light.small_kids_bedroom
        - light.bathroom_bulb
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.door_sensor
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 5
    timeout:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.entrance_bulb
  mode: restart
- id: shabbat_1
  alias: Shabbat 1 - candle light plag
  description: ''
  trigger:
  - platform: template
    value_template: '{{ as_timestamp(states(''sensor.jewish_calendar_plag_hamincha''))|timestamp_custom(''%H:%M'',
      true) == as_timestamp(now())|timestamp_custom(''%H:%M'', true) }}'
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Shabbat
  - condition: state
    entity_id: binary_sensor.is_early_shabbat
    state: 'on'
  action:
  - service: chime_tts.say
    data:
      message: זמן הדלקת נרות
      chime_path: choir
      cache: true
      announce: true
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  mode: single
- id: alert_high_temp
  alias: Alert when high temperature
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.processor_temperature
    for:
      hours: 0
      minutes: 10
      seconds: 0
    above: 67
  condition: []
  action:
  - service: notify.mobile_app_aviad_phone
    data:
      message: Temperature is {{ states("sensor.processor_temperature") }}
      title: Temperature is too high
  mode: single
- id: alert_omer
  alias: Alert when Sfirat HaOmer
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.jewish_calendar_day_of_the_omer
    for:
      hours: 0
      minutes: 36
      seconds: 0
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.jewish_calendar_day_of_the_omer
      state: '0'
  - condition: not
    conditions:
    - condition: template
      value_template: '{{trigger.from_state.state == ''unknown''}}'
  action:
  - variables:
      message: '{% set totalDays = states(''sensor.jewish_calendar_day_of_the_omer'')
        | int %}{% set weeks = totalDays // 7 %}{% set daysInWeek = totalDays %7 %}{%
        set lsb = totalDays % 10 %}{% set msb = totalDays - lsb %}הַיּוֹם{% if totalDays
        == 1 %} יוֹם אֶחָד{% elif totalDays > 1 and totalDays < 7 %}{{ totalDays }}
        יָמִים{% else %} {% if totalDays < 21 or lsb == 0 %}{{ totalDays }}{% else
        %}{{ lsb }} וְ- {{ msb }}{% endif %} {% if totalDays < 11 %} יָמִים {% else
        %} יוֹם {% endif %} {% if weeks < 2 %}שֶׁהֵם שָׁבוּעַ אֶחָד {% else %}שֶׁהֵם
        {{ weeks }} שָׁבוּעוֹת {% endif %} {% if daysInWeek == 1 %}וְיוֹם אֶחָד {%
        elif daysInWeek > 1 %}וְ- {{ daysInWeek }} יָמִים {% endif %}{% endif %}לָעומֶר

        '
  - service: notify.home_assistant_telegram
    data:
      message: '{{ message }}

        '
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.sonos_living_room
        state: playing
    then:
    - service: media_player.volume_set
      data:
        volume_level: 0.4
      target:
        entity_id: media_player.sonos_living_room
  - service: chime_tts.say
    data:
      chime_path: toast
      offset: 1000
      announce: true
      language: iw
      tts_platform: google_translate
      message: '{{ message }}

        '
    target:
      entity_id: media_player.sonos_living_room
    enabled: true
  mode: single
- id: alert_washing_machine_finished
  alias: Alert when washing machine finished
  description: ''
  use_blueprint:
    path: sbyx/notify-or-do-something-when-an-appliance-like-a-dishwasher-or-washing-machine-finishes.yaml
    input:
      power_sensor: sensor.washing_machine_socket_power
      finishing_hysteresis: 4
      actions:
      - if:
        - condition: state
          entity_id: binary_sensor.washing_machine_contact_sensor
          state: 'off'
        then:
        - event: washing_machine_finished
          event_data: {}
        - service: notify.mobile_app_noga_phone
          data:
            message: מכונת הכביסה סיימה
        - repeat:
            until:
            - condition: or
              conditions:
              - condition: state
                entity_id: binary_sensor.washing_machine_contact_sensor
                state: 'on'
              - condition: state
                entity_id: input_boolean.washing_machine_tag_scanned
                state: 'on'
            sequence:
            - if:
              - condition: state
                entity_id: media_player.mitv_adb
                state: playing
              then:
              - service: notify.mi_tv
                data:
                  message: מכונת הכביסה סיימה
              - service: chime_tts.say
                target:
                  entity_id: media_player.sonos_kitchen
                data:
                  offset: 500
                  announce: true
                  language: iw
                  message: מכונת הכביסה סיימה
                  tts_platform: google_translate
                  chime_path: chord
                  cache: true
                enabled: true
              else:
              - service: chime_tts.say
                target:
                  entity_id:
                  - media_player.sonos_kitchen
                  - media_player.sonos_living_room
                data:
                  offset: 500
                  announce: true
                  language: iw
                  message: מכונת הכביסה סיימה
                  tts_platform: google_translate
                  chime_path: chord
                  join_players: true
                  cache: true
                  unjoin_players: true
                enabled: true
            - delay:
                hours: 0
                minutes: 10
                seconds: 0
                milliseconds: 0
      pre_actions: []
      starting_threshold: 5
      finishing_threshold: 3
  trace:
    stored_traces: 10
- id: alert_phone_low_battery_aviad
  alias: Alert when phone low battery - Aviad
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.aviad_phone_battery_level
    below: '45'
  - platform: state
    entity_id:
    - binary_sensor.aviad_phone_is_charging
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
  - condition: state
    entity_id: binary_sensor.aviad_phone_is_charging
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.aviad_phone_battery_level
    below: 45
  action:
  - repeat:
      until:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.aviad_phone_is_charging
          state: 'on'
        - condition: state
          entity_id: input_select.mode
          state: Shabbat
        - condition: numeric_state
          entity_id: sensor.aviad_phone_battery_level
          above: 45
        - condition: state
          entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
          state: 'on'
      sequence:
      - service: notify.mobile_app_aviad_phone
        data:
          message: clear_notification
          data:
            tag: aviad_low_battery
      - service: notify.mobile_app_aviad_phone
        data:
          message: Low battery
          data:
            actions:
            - action: long_snooze_low_battery_notification
              title: Longer Snooze
            tag: aviad_low_battery
      - delay:
          hours: 0
          minutes: 20
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: input_boolean.longer_low_battery_snooze
          state: 'on'
        then:
        - delay:
            hours: 0
            minutes: 40
            seconds: 0
            milliseconds: 0
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.longer_low_battery_snooze
  mode: single
- id: alert_phone_low_battery_noga
  alias: Alert when phone low battery - Noga
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.noga_phone_battery_level
    below: 40
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
  - condition: state
    entity_id: binary_sensor.noga_phone_is_charging
    state: 'off'
  action:
  - service: notify.mobile_app_noga_phone
    data:
      message: Low battery
  mode: single
- id: tag_scanned_parent_bathroom
  alias: Tag parent bathroom is scanned
  description: ''
  trigger:
  - platform: tag
    tag_id: 17137ac4-9193-4ce7-a194-43126a8b63b9
  condition: []
  action:
  - service: light.toggle
    data: {}
    target:
      entity_id: light.parents_bathroom_lights
  mode: single
- id: lights_washing_machine_finished
  alias: Light routine when washing machine finished
  description: ''
  trigger:
  - platform: event
    event_type: washing_machine_finished
  condition: []
  action:
  - service: light.turn_on
    data:
      rgb_color:
      - 17
      - 0
      - 255
    target:
      entity_id: light.balcony_bulb
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.washing_machine_contact_sensor
      to: 'on'
    - platform: tag
      tag_id: 93d413b2-e019-43c7-a394-ad8db3bc8f34
    timeout:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: light.turn_on
    data:
      color_temp: 153
      brightness_pct: 100
    target:
      entity_id: light.balcony_bulb
  - if:
    - condition: state
      entity_id: sun.sun
      state: above_horizon
    then:
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
    else:
    - delay:
        hours: 0
        minutes: 30
        seconds: 0
        milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.balcony_bulb
  mode: single
- id: shabbat_guests
  alias: Guests for Shabbat
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.guests
    to: 'on'
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.guests_shabbat_dinner
  mode: single
- id: shabbat_2
  alias: Shabbat 2 - lights scenes
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '1:00:00'
    id: shabbat_1_evening_house
  - platform: time
    id: shabbat_2_night_house
    at: input_datetime.shabbat_lights_out
  - at: input_datetime.shabbat_morning_lights_on
    platform: time
    id: shabbat_3_morning_house
    enabled: true
  - at: '10:30:00'
    platform: time
    id: shabbat_3_morning_meal
    enabled: true
  - at: input_datetime.shabbat_noon_lights_out
    platform: time
    id: shabbat_4_day_house
    enabled: true
  - event: sunset
    offset: -01:30:00
    platform: sun
    id: shabbat_5_sunset_house
    enabled: true
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Shabbat
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: shabbat_1_evening_house
      - condition: time
        after: 00:00:00
        before: input_datetime.shabbat_lights_out
      sequence:
      - if:
        - condition: time
          before: input_datetime.shabbat_night_baseline_routine
          after: 00:00:00
        then:
        - wait_for_trigger:
          - platform: time
            at: input_datetime.shabbat_night_baseline_routine
        else: []
      - if:
        - condition: state
          entity_id: binary_sensor.is_early_shabbat
          state: 'off'
        then:
        - delay:
            hours: 1
            minutes: 0
            seconds: 0
            milliseconds: 0
        else: []
      - if:
        - condition: state
          entity_id: input_boolean.guests_shabbat_dinner
          state: 'on'
        then:
        - delay:
            hours: 1
            minutes: 0
            seconds: 0
            milliseconds: 0
        else: []
      - if:
        - condition: time
          after: 00:00:00
          before: input_datetime.shabbat_lights_out
        then:
        - scene: scene.shabbat_1_evening
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.bed_led_strip
    - conditions:
      - condition: trigger
        id: shabbat_2_night_house
      sequence:
      - scene: scene.shabbat_2_goodnight
      - service: cover.set_cover_position
        target:
          entity_id: cover.switcher_runner
        data:
          position: 5
    - conditions:
      - condition: trigger
        id: shabbat_3_morning_house
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.average_cloudiness_1h
            above: 60
          - condition: numeric_state
            entity_id: sensor.pirateweather_cloud_coverage
            above: 60
        then:
        - service: scene.turn_on
          target:
            entity_id: scene.shabbat_3_morning_cloudy
          metadata: {}
        else:
        - service: scene.turn_on
          target:
            entity_id: scene.shabbat_3_morning
          metadata: {}
    - conditions:
      - condition: trigger
        id: shabbat_3_morning_meal
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.average_cloudiness_1h
            above: 60
          - condition: numeric_state
            entity_id: sensor.pirateweather_cloud_coverage
            above: 60
        then:
        - service: scene.turn_on
          target:
            entity_id: scene.shabbat_3_morning_cloudy
          metadata: {}
    - conditions:
      - condition: trigger
        id: shabbat_4_day_house
      - condition: numeric_state
        entity_id: cover.switcher_runner
        attribute: current_position
        above: 20
      - condition: numeric_state
        entity_id: sensor.average_cloudiness_1h
        below: 60
      - condition: numeric_state
        entity_id: sensor.pirateweather_cloud_coverage
        below: 60
      sequence:
      - scene: scene.shabbat_2_goodnight
    - conditions:
      - condition: trigger
        id: shabbat_5_sunset_house
      sequence:
      - scene: scene.shabbat_0_sunset
    default: []
  mode: queued
  max: 10
- id: shabbat_3
  alias: Shabbat 3 - fans scenes
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.mode
    to: Shabbat
    id: living_room_fan
    enabled: true
  - at: '20:00:00'
    platform: time
    id: all_fans
    enabled: true
  - at: '23:00:00'
    platform: time
    id: bedroom_fans
    enabled: false
  - at: 07:00:00
    platform: time
    id: all_fans
    enabled: false
  - at: 09:30:00
    platform: time
    enabled: true
    id: living_room_fan
  - at: '12:30:00'
    platform: time
    id: all_fans
    enabled: true
  - at: '17:50:00'
    platform: time
    id: living_room_fan
    enabled: true
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Shabbat
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: all_fans
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.shabbat_fans_on
        metadata: {}
      - if:
        - condition: state
          entity_id: input_boolean.guests
          state: 'on'
        then:
        - service: fan.turn_on
          data: {}
          target:
            entity_id: fan.office_fan
    - conditions:
      - condition: trigger
        id: bedroom_fans
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.shabbat_bedroom_fans_on
        metadata: {}
      - if:
        - condition: state
          entity_id: input_boolean.guests
          state: 'on'
        then:
        - service: fan.turn_on
          data: {}
          target:
            entity_id: fan.office_fan
    - conditions:
      - condition: trigger
        id: no_fans
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.fans_out
        metadata: {}
    - conditions:
      - condition: trigger
        id: living_room_fan
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.shabbat_living_room_fans_on
        metadata: {}
    default: []
  mode: single
- id: tag_scanned_waching_machine
  alias: Washing machine tag state
  description: ''
  trigger:
  - platform: tag
    tag_id: 93d413b2-e019-43c7-a394-ad8db3bc8f34
  condition: []
  action:
  - service: light.turn_on
    data:
      color_temp: 153
      brightness_pct: 100
    target:
      entity_id: light.balcony_bulb
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.washing_machine_tag_scanned
  - delay:
      hours: 0
      minutes: 40
      seconds: 0
      milliseconds: 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.washing_machine_tag_scanned
  mode: single
- id: zigbee_switch_balcony
  alias: Zigbee balcony switch automation
  description: ''
  use_blueprint:
    path: homeassistant/sonoff_switch.yaml
    input:
      sonoff_button: 32b1a46b19821e2f7655e149ba39da85
      toggle_action:
      - service: light.toggle
        data:
          color_temp: 153
          brightness_pct: 100
        target:
          entity_id: light.balcony_bulb
      on_action:
      - service: light.turn_on
        data:
          color_temp: 153
        target:
          entity_id: light.balcony_bulb
- id: zigbee_switch_parents_bathroom
  alias: Zigbee parents bathroom switch automation
  description: ''
  use_blueprint:
    path: homeassistant/sonoff_switch.yaml
    input:
      sonoff_button: aae1c5bf1cd8c2ed601df34d695457a4
      toggle_action:
      - service: light.toggle
        data: {}
        target:
          entity_id:
          - light.parent_bathroom_bulb
      on_action:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.parents_bathroom_lights
      off_action:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.parents_bathroom_lights
- id: alert_download_finished
  alias: Alert when download is finished
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.qbittorrent_down_speed
    for:
      hours: 0
      minutes: 10
      seconds: 0
    below: 1
  condition:
  - condition: template
    value_template: '{{trigger.from_state.state != ''unavailable''}}'
  action:
  - service: notify.mobile_app_aviad_phone
    data:
      message: Download completed
      title: Qbittorent
      data:
        actions:
        - action: URI
          title: Open Qbittorrent
          uri: /db21ed7f_qbittorrent/dashboard
        tag: download-finished
  mode: restart
- id: ble_transimitter_active_when_home
  alias: BLE transmitter active only at home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - device_tracker.aviad_phone
    for:
      hours: 0
      minutes: 3
      seconds: 0
    from: home
    to: not_home
  - platform: state
    entity_id:
    - device_tracker.aviad_phone
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - if:
    - condition: state
      entity_id: device_tracker.aviad_phone
      state: not_home
      for:
        hours: 0
        minutes: 0
        seconds: 0
    then:
    - service: notify.mobile_app_aviad_phone
      data:
        message: command_ble_transmitter
        data:
          command: turn_off
    else:
    - service: notify.mobile_app_aviad_phone
      data:
        message: command_ble_transmitter
        data:
          command: turn_on
  mode: single
- id: showert_morning
  alias: Shower in the morning
  description: ''
  trigger:
  - platform: time
    at: 06:15:00
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Home
  - condition: state
    entity_id: input_boolean.morning_shower
    state: 'on'
  action:
  - service: switcher_kis.turn_on_with_timer
    data:
      timer_minutes: 20
    target:
      entity_id: switch.switcher_home
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.morning_shower
  mode: single
- id: vacuum_when_away
  alias: Vacuum when away
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.mode
    to: Away
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.vacuum_when_away
    state: 'on'
  action:
  - service: dreame_vacuum.vacuum_clean_segment
    data:
      segments:
      - 1
      - 11
      - 8
    target:
      entity_id: vacuum.dreame_robot_vacuum_d9
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.vacuum_when_away
  mode: single
- id: kids_heater_routine
  alias: Kids heater climate routine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.kids_heater_climate_scheduler
    to: 'on'
    from: 'off'
    id: to_on
  - platform: state
    entity_id:
    - schedule.kids_heater_climate_scheduler
    to: 'off'
    from: 'on'
    id: to_off
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: to_on
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.mode
          state: Away
    - condition: trigger
      id: to_off
  action:
  - service: climate.turn_{{ trigger.to_state.state }}
    data: {}
    target:
      entity_id: climate.kids_bedroom
  mode: single
- id: kids_heater_switch
  alias: Kids heater climate - connect to switch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.smart_plug_il
    to: 'on'
    from: 'off'
    id: to_on
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: to_on
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.mode
          state: Away
    - condition: trigger
      id: to_off
  action:
  - service: climate.turn_{{ trigger.to_state.state }}
    data: {}
    target:
      entity_id: climate.kids_bedroom
  mode: single
- id: mobile_event_longer_battery_notification_snooze
  alias: Mobile Event Fired - Longer low notification snooze
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: long_snooze_low_battery_notification
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.longer_low_battery_snooze
  mode: single
- id: kids_heater_hass_restart
  alias: Kids heater when home assistant restart
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition:
  - condition: and
    conditions:
    - condition: not
      conditions:
      - condition: state
        entity_id: input_select.mode
        state: Away
    - condition: state
      entity_id: schedule.kids_heater_climate_scheduler
      state: 'on'
  action:
  - service: climate.turn_on
    data: {}
    target:
      entity_id: climate.kids_bedroom
  mode: single
- id: alert_cloudy_day
  alias: Alert when cluody day
  description: ''
  trigger:
  - platform: time
    at: '17:30:00'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
  - condition: numeric_state
    entity_id: sensor.average_cloudiness_8h
    above: 65
  - condition: state
    entity_id: switch.switcher_home
    state: 'off'
  action:
  - service: notify.aviad_and_noga_mobiles
    data:
      message: We had {{states('sensor.average_cloudiness_8h')}} % average cloud coverage
        for the last 8h
      data:
        actions:
        - action: turn_on_boiler_notification
          title: Turn on boiler for 30min
        - action: boiler_dismiss
          title: Dismiss
        tag: cloudy-day-alert
      title: Cloudy day
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        tag: cloudy-day-alert
    timeout:
      hours: 0
      minutes: 20
      seconds: 0
      milliseconds: 0
  - choose:
    - conditions: '{{ wait.trigger and wait.trigger.event.data.action == ''turn_on_boiler_notification''
        }}'
      sequence:
      - service: switcher_kis.turn_on_with_timer
        data:
          timer_minutes: 30
        target:
          entity_id: switch.switcher_home
      - service: notify.aviad_and_noga_mobiles
        data:
          message: clear_notification
          data:
            tag: cloudy-day-alert
    default:
    - service: notify.aviad_and_noga_mobiles
      data:
        message: clear_notification
        data:
          tag: cloudy-day-alert
  mode: single
- id: backlight_tv_music
  alias: Backlight TV Music
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.sonos_living_room
    for:
      hours: 0
      minutes: 0
      seconds: 5
    to: playing
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.sonos_living_room
      attribute: source
      state: TV
  action:
  - service: light.turn_on
    data:
      effect: '{{ state_attr("light.wled_backlight_tv", "effect_list") | random }}'
    target:
      entity_id: light.wled_backlight_tv
  - service: select.select_option
    target:
      entity_id: select.wled_backlight_tv_color_palette
    data:
      option: '{{ state_attr(''select.wled_backlight_tv_color_palette'', ''options'')
        | random }}'
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      from: playing
      for:
        hours: 0
        minutes: 0
        seconds: 7
    timeout:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.wled_backlight_tv
  mode: restart
- id: hyperion_activation
  alias: Hyperion Activation
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.hyperion_activation
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - input_boolean.hyperion_activation
    from: 'off'
    to: 'on'
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.hyperion_activation
      state: 'on'
    then:
    - service: script.activate_hyperion
      data: {}
    else:
    - service: script.disable_hyperion
      data: {}
  mode: single
- id: alert_noga_heading_home
  alias: Alert when Noga is heading home
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.noga_distance
    for:
      hours: 0
      minutes: 0
      seconds: 0
    below: 2
  - platform: state
    entity_id:
    - sensor.noga_direction_of_travel
    to: towards
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    state: towards
    entity_id: sensor.noga_direction_of_travel
  - condition: numeric_state
    entity_id: sensor.noga_to_aviad_proximity
    above: 1
  action:
  - service: notify.mobile_app_aviad_phone
    data:
      message: 'Distance: {{ states.proximity.noga.state }} km. Waze time: {{ states.sensor.waze_travel_noga.state
        }}'
      title: Noga is heading home
      data:
        tag: noga-headed-home
  mode: single
- id: office_md
  alias: Office motion detection
  description: ''
  trigger:
  - platform: state
    from: 'off'
    to: 'on'
    entity_id:
    - binary_sensor.office_occupancy_sensor_occupancy
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: input_boolean.guests
    state: 'off'
  action:
  - service: light.turn_on
    data:
      rgb_color:
      - 17
      - 0
      - 255
      brightness_pct: 50
    target:
      entity_id:
      - light.office_desk_light
  - wait_for_trigger:
    - platform: state
      from: 'on'
      to: 'off'
      entity_id:
      - binary_sensor.office_occupancy_sensor_occupancy
    timeout:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - delay:
      hours: 0
      minutes: 0
      seconds: 40
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.office_desk_light
  mode: restart
- id: one_time_automation_noga_home
  alias: One-time automation - Alert when Nogs is home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.noga
    to: home
    enabled: true
  condition: []
  action:
  - service: notify.mobile_app_noga_phone
    data:
      title: תזכורת
      message: "\U0001F489"
    enabled: true
  - service: automation.turn_off
    data:
      stop_actions: true
    enabled: true
    target:
      entity_id: automation.one_time_automation_alert_when_nogs_is_home
  mode: single
- id: dismiss_Alert_when_charging
  alias: Dismiss alert when charging
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.aviad_phone_is_charging
    to: 'on'
  condition: []
  action:
  - service: notify.mobile_app_aviad_phone
    data:
      message: clear_notification
      data:
        tag: aviad_low_battery
  mode: single
- id: alert_when_raining
  alias: Alert when raining
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_raining
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: numeric_state
    entity_id: cover.switcher_runner
    above: 20
    attribute: current_position
  action:
  - if:
    - condition: state
      entity_id: input_select.mode
      state: Shabbat
    then: []
    else:
    - service: notify.aviad_and_noga_mobiles
      data:
        message: It's raining. Do you want to close the shutter in the living room?
        data:
          actions:
          - action: close_shutter_notification
            title: Close shutter
          - action: shutter_dismiss
            title: Dismiss
          tag: rain-alert
        title: Rain
    - wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          tag: rain-alert
      - platform: state
        entity_id:
        - binary_sensor.is_raining
        to: 'off'
      timeout:
        hours: 1
        minutes: 0
        seconds: 0
        milliseconds: 0
      continue_on_timeout: true
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ wait.trigger and wait.trigger.event and wait.trigger.event.data
            and wait.trigger.event.data.action == ''close_shutter_notification'' }}'
        sequence:
        - service: cover.set_cover_position
          metadata: {}
          data:
            position: 19
          target:
            entity_id: cover.switcher_runner
        - service: notify.aviad_and_noga_mobiles
          data:
            message: clear_notification
            data:
              tag: rain-alert
      default:
      - service: notify.aviad_and_noga_mobiles
        data:
          message: clear_notification
          data:
            tag: rain-alert
  mode: single
- id: night_env_routine_shutter
  alias: Night environment routine - shutter
  description: ''
  trigger:
  - platform: time
    at: '22:30:00'
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Home
  action:
  - service: cover.set_cover_position
    target:
      entity_id:
      - cover.switcher_runner
    data:
      position: 5
  mode: single
- id: alert_sonos_roam_low_battery
  alias: Alert on low Sonos Roam battery
  description: ''
  use_blueprint:
    path: jazakrzewski/send-notification-for-battery-level.yaml
    input:
      battery_entity: sensor.kids_bedroom_battery
      battery_level: 40
      notify_device: 4214920656084e3e0376f9a6c7b2eb48
- id: hyperion_per_app
  alias: Hyperion Activation per app
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.mitv_adb
    attribute: app_name
    to: FreeTV
    id: turn_on
  - platform: state
    entity_id:
    - media_player.mitv_adb
    attribute: app_name
    to: HDMI Input
    id: turn_off
  - platform: state
    entity_id:
    - media_player.mitv_adb
    attribute: app_name
    to: Netflix
    id: turn_off
  - platform: state
    entity_id:
    - media_player.mitv_adb
    attribute: app_name
    to: SmartTube
    id: turn_on
  - platform: state
    entity_id:
    - media_player.mitv_adb
    attribute: app_name
    id: turn_on
    to: VLC
  - platform: state
    entity_id:
    - media_player.mitv_adb
    attribute: app_name
    to: Android TV Launcher
    id: turn_off
    for:
      hours: 0
      minutes: 0
      seconds: 15
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - turn_on
    then:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.hyperion_activation
      data: {}
    else:
    - service: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.hyperion_activation
  mode: single
- id: alert_and_speak_day_agenda
  alias: Alert and speak day agenda
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Home
  action:
  - service: script.set_up_sonos_group
    data: {}
    enabled: true
  - service: calendar.get_events
    metadata: {}
    data:
      duration:
        hours: 17
        minutes: 0
        seconds: 0
    target:
      entity_id:
      - calendar.aviadlevy1_gmail_com
    response_variable: agenda
  - service: conversation.process
    metadata: {}
    data:
      text: "Location: Petah Tikva, Israel \nTime: {{ as_timestamp(now()) | timestamp_custom(\"%H:%M
        %d/%m/%y\") }}\n{% set max_temp = state_attr('sensor.ims_forecast_today',
        'maximum_temperature') %} Weather:  {{ state_attr('sensor.ims_forecast_today',
        'weather').value }} (max of {{ max_temp.value}}{{max_temp.unit }}, {{ states('sensor.ims_precipitation_probability')}}%
        precipitation)\nPersonal calendar events today: {%- if agenda['calendar.aviadlevy1_gmail_com'].events
        %}\n  {%- for event in agenda['calendar.aviadlevy1_gmail_com'].events %}\n
        \ - Summary: {{ event.summary }}\n    Start: {% if event.start is defined
        %}{{ as_timestamp(event.start) | timestamp_custom(\"%H:%M\") }}{% else %}All
        Day{% endif %}\n  {%- endfor %}\n{%- else %}\n  - No upcoming events.\n{%-
        endif %} \nHebrew date to mention in message: '{{states('sensor.jewish_calendar_date').split()[:2]
        | join(\" \") }}'\nGenerate text for a notification that will be be heard
        in our house speakers. no emojis.\n- You are a helpful personal agent that
        generates text for the user \n- Your answers are helpful, friendly, insightful
        and kids friendly.\n- Your messages help the user prepare for their day, for
        example:\n  - Making note of unusual weather for the location and time of
        year (but not mundane details like \"0% chance of precipitation\")\n  - Anything
        that may be special or unique, such as celebrating a birthday\n- Your message
        should not be longer than 600 tokens! this is a hard requirement!\n- Your
        priority so everything can be in that message is:\n  - Weather forcast\n  -
        Upcoming calendar events\n  - adding a joke or an insightful things happened
        today in history (optional)\n- Your answer should contain 3 paragraphs, and
        1 short goodbye paragraph. paragraphs are seperated with double breaking line.
        paragraph should not contains more than 200 characters  "
      agent_id: f4c52c64de732da6128ad2ba3385071d
    response_variable: agent
  - service: notify.home_assistant_telegram
    data:
      message: '{{ agent.response.speech.plain.speech }}'
  - service: chime_tts.say
    data:
      offset: 500
      final_delay: 0
      tts_playback_speed: 100
      message: '{% set long = agent.response.speech.plain.speech %} {{ long.split("\n\n")[0]
        }}

        '
      tts_platform: google_translate
      language: iw
      chime_path: choir
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: chime_tts.say
    data:
      message: '{% set long = agent.response.speech.plain.speech %} {{ long.split("\n\n")[1]
        }}

        '
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: chime_tts.say
    data:
      message: '{% set long = agent.response.speech.plain.speech %} {{ long.split("\n\n")[2]
        }}

        '
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: chime_tts.say
    data:
      message: '{% set long = agent.response.speech.plain.speech %} {{ long.split("\n\n")[3:]
        }}

        '
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: media_player.unjoin
    data: {}
    target:
      entity_id:
      - media_player.sonos_living_room
      - media_player.sonos_kitchen
    enabled: true
  mode: single
- id: oref_alert_time_to_shelter_countdown
  alias: Pikud HaOref routine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.oref_alert
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    from: 'off'
  action:
  - variables:
      current_wled_state: '{{ states(''light.wled_backlight_tv'') }}'
      current_entrance_state: '{{ states(''light.entrance_bulb'') }}'
  - service: notify.home_assistant_telegram
    data:
      title: התרעה
      message: בפתח תקווה
  - if:
    - condition: state
      entity_id: light.wled_backlight_tv
      state: 'off'
    - condition: state
      entity_id: light.living_room_lights
      state: 'off'
    then:
    - service: light.turn_on
      metadata: {}
      data:
        transition: 5
        kelvin: 2325
        brightness_pct: 60
      target:
        entity_id: light.wled_backlight_tv
  - if:
    - condition: state
      entity_id: light.entrance_bulb
      state: 'off'
    - condition: state
      entity_id: light.living_room_lights
      state: 'off'
    then:
    - service: light.turn_on
      metadata: {}
      target:
        entity_id: light.entrance_bulb
      data: {}
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.oref_alert
      to: 'off'
    timeout:
      hours: 0
      minutes: 15
      seconds: 10
      milliseconds: 0
  - service: chime_tts.say
    data:
      message: אפשר לצאת מהמה מד
      chime_path: classical
      cache: true
      announce: true
      language: iw
      tts_platform: google_translate
      end_chime_path: classical
      offset: 1000
      final_delay: 1000
      volume_level: 0.4
    target:
      entity_id: media_player.sonos_living_room
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - if:
    - condition: template
      value_template: '{{ current_wled_state == "off" }}'
    then:
    - service: light.turn_off
      metadata: {}
      data:
        transition: 60
      target:
        entity_id: light.wled_backlight_tv
  - if:
    - condition: template
      value_template: '{{ current_entrance_state == "off" }}'
    then:
    - service: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.entrance_bulb
  mode: queued
- id: alert_picking_yair
  alias: Alert when picking Yair
  description: ''
  trigger:
  - platform: zone
    entity_id: person.aviad
    zone: zone.school
    event: enter
  - platform: zone
    entity_id: person.noga
    zone: zone.school
    event: enter
  condition:
  - condition: template
    value_template: "{{ state_attr(trigger.entity_id,\n    'friendly_name') == states('input_select.who_picking_the_kids')
      }}"
  - condition: not
    conditions:
    - condition: state
      entity_id: todo.things_yair_took_to_school
      state: '0'
  - condition: time
    after: '11:30:00'
    before: '17:00:00'
  - condition: template
    value_template: '{{(as_timestamp(now()) - as_timestamp(state_attr(''automation.alert_when_picking_yair'',
      ''last_triggered'') | default(0)) | int > 21600 )}}'
    enabled: true
  action:
  - service: todo.get_items
    data:
      status: needs_action
    target:
      entity_id: todo.things_yair_took_to_school
    response_variable: service_result
  - service: notify.mobile_app_{{ state_attr(trigger.entity_id, 'id') }}_phone
    data:
      title: לוודא שיאיר לקח
      message: '{{ service_result[''todo.things_yair_took_to_school''][''items'']
        | map(attribute=''summary'') | join('' '') }}'
  mode: single
- id: who_pick_kids
  alias: Who's picking the kids
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        weekday:
        - mon
      sequence:
      - service: input_select.select_option
        metadata: {}
        data:
          option: Noga
        target:
          entity_id: input_select.who_picking_the_kids
    - conditions:
      - condition: time
        weekday:
        - tue
        - sun
      sequence:
      - service: input_select.select_option
        metadata: {}
        data:
          option: Aviad
        target:
          entity_id: input_select.who_picking_the_kids
  mode: single
- id: shabbat_4
  alias: Shabbat 4 - rain routine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_raining
    for:
      hours: 0
      minutes: 20
      seconds: 0
    to: 'on'
    id: raining
  - platform: state
    entity_id:
    - binary_sensor.is_raining
    for:
      hours: 0
      minutes: 20
      seconds: 0
    to: 'off'
    id: not_raining
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Shabbat
  - condition: time
    after: 07:00:00
    before: input_datetime.shabbat_lights_out
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_raining
        state: 'on'
      - condition: numeric_state
        entity_id: cover.switcher_runner
        above: 25
        attribute: current_position
      sequence:
      - service: cover.set_cover_position
        metadata: {}
        data:
          position: 19
        target:
          entity_id: cover.switcher_runner
      - if:
        - condition: state
          entity_id: light.living_room_lights
          state: 'off'
        then:
        - service: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.living_room_lights
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_raining
        state: 'off'
      - condition: numeric_state
        entity_id: cover.switcher_runner
        attribute: current_position
        below: 25
      sequence:
      - service: cover.open_cover
        target:
          entity_id:
          - cover.switcher_runner
        data: {}
    default: []
  mode: single
- id: alert_and_speak_day_agenda_test
  alias: Alert and speak day agenda - testing
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Home
  action:
  - service: script.set_up_sonos_group
    data: {}
    enabled: true
  - variables:
      long: 'בוקר טוב! התחזיקו בכובעים, היום בפתח תקווה צפוי להיות חלקית מעונן וחם
        עם 25 מעלות. נזכרו להשתתף בפגישה החשובה עם אייל בשעה 10:30. יום נפלא לצאת
        החוצה ולהנות מהחיים!

        כדי לסיים את הוד החודש בסגנון, אל תשכחו שהיום הוא ''ד'' אייר''. נשארו רק כמה
        ימים עד חג העצמאות, אז תחגגו את היום עם אופטימיות ושמחה. אולי היסטוריה גם
        תעזור לכם לחיוך - האם ידעתם שביום זה, לפני הרבה שנים, נחתה חללית על הירח?

        שיהיה לכם יום מקסים ומוצלח! תהנו מהזמן עם אייל ואל תשכחו לחגוג את יום העצמאות
        הקרוב. מזכירה לכם שאני כאן תמיד לכל שאלה או עזרה. נשים קדימה!

        '
  - service: chime_tts.say
    data:
      offset: 500
      final_delay: 0
      tts_playback_speed: 100
      message: '{{ long.split("\n\n")[0] }}

        '
      tts_platform: google_translate
      language: iw
      chime_path: choir
      announce: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: chime_tts.say
    data:
      message: '{{ long.split("\n\n")[1] }}

        '
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: chime_tts.say
    data:
      message: '{{ long.split("\n\n")[2] }}

        '
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: chime_tts.say
    data:
      message: '{{ long.split("\n\n")[3:] }}

        '
      tts_platform: google_translate
      language: iw
      join_players: true
    target:
      entity_id:
      - media_player.sonos_kids_bedroom
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.sonos_living_room
      to: paused
    timeout:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: media_player.unjoin
    data: {}
    target:
      entity_id:
      - media_player.sonos_living_room
      - media_player.sonos_kitchen
    enabled: true
  mode: single
- id: one_time_automation_office_md
  alias: One time automation - office motion
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
    enabled: true
  condition: []
  action:
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.office_motion_detection
    enabled: true
  - service: automation.turn_off
    data:
      stop_actions: true
    enabled: true
    target:
      entity_id: automation.one_time_automation_office_motion
  mode: single
- id: alert_pending_updates
  alias: Alert when pending updates
  description: ''
  use_blueprint:
    path: mdegat01/update_notifications.yaml
    input:
      update_entities:
      - update.adaptive_lighting_update
      - update.adguard_home_update
      - update.bathroom_bulb_firmware
      - update.bed_motion_sensor_firmware
      - update.bedroom_temperature_sensor_firmware
      - update.bubble_card_update
      - update.card_mod_update
      - update.chime_tts_update
      - update.city_mind_water_meter_update
      - update.door_sensor_firmware
      - update.dreame_vacuum_update
      - update.duck_dns_update
      - update.esphome_update
      - update.file_editor_update
      - update.formula_one_card_update
      - update.hacs_update
      - update.home_assistant_core_update
      - update.home_assistant_google_drive_backup_update
      - update.home_assistant_operating_system_update
      - update.home_assistant_supervisor_update
      - update.hyperion_ng_update
      - update.israel_meteorological_service_sensor_update
      - update.kids_temperature_sensor_firmware
      - update.kitchen_motion_sensor_firmware
      - update.kitchen_switch_firmware
      - update.living_room_door_large_firmware
      - update.living_room_door_small_firmware
      - update.living_room_temperature_sensor_firmware
      - update.living_room_window_large_firmware
      - update.living_room_window_small_firmware
      - update.local_tuya_update
      - update.mini_graph_card_update
      - update.mosquitto_broker_update
      - update.mushroom_update
      - update.nginx_home_assistant_ssl_proxy_update
      - update.oref_alert_update
      - update.parent_bathroom_bulb_firmware
      - update.pirate_weather_update
      - update.qbittorrent_update
      - update.smart_plug_kids_bedroom_firmware
      - update.studio_code_server_update
      - update.vacuum_card_update
      - update.vertical_stack_in_card_update
      - update.washing_machine_contact_sensor_firmware
      - update.wled_backlight_tv_firmware
      - update.xiaomi_vacuum_map_card_update
      - update.average_sensor_update
      - update.balcony_bulb_firmware
      - update.closet_bulb_firmware
      - update.israel_electric_corporation_iec_update
      - update.alexa_media_player_update
      - update.apexcharts_card_update
      - update.bazarr_update
      - update.prowlarr_update
      - update.radarr_update
      - update.raspberry_pi_gpio_update
      - update.sonarr_update
      - update.tailscale_update
      - update.advanced_ssh_web_terminal_update
      mobile_app_device: 4214920656084e3e0376f9a6c7b2eb48
      reminder_hours: ''
      only_after: 08:00:00
      only_before: '22:00:00'
      mobile_app_device_2: 4214920656084e3e0376f9a6c7b2eb48
- id: zigbee_switch_closet
  alias: Zigbee closet switch automation
  description: ''
  use_blueprint:
    path: homeassistant/sonoff_switch.yaml
    input:
      sonoff_button: 6d651c2bdf2caa74821a4fb0c684ef6f
      toggle_action:
      - service: light.toggle
        data:
          color_temp: 153
          brightness_pct: 100
        target:
          entity_id: light.closet_bulb
      on_action: []
- id: echo_volume_routine
  alias: Projector in bedroom routine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - remote.mibox3
    id: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    to: 'on'
  - platform: state
    entity_id:
    - remote.mibox3
    id: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    enabled: true
    to: 'off'
    from: 'on'
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - 'off'
    then:
    - service: media_player.volume_set
      metadata: {}
      data:
        volume_level: 0.25
      target:
        entity_id: media_player.echo_bedroom
    else:
    - service: media_player.volume_set
      metadata: {}
      data:
        volume_level: 1
      target:
        entity_id: media_player.echo_bedroom
    - service: media_player.volume_set
      target:
        entity_id: media_player.mibox
      data:
        volume_level: 0.6
    - service: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.bed_led_strip
  mode: single
- id: home_wifi_routine
  alias: Home WIFI connection routine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.aviad_phone_wifi_connection
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: notify.mobile_app_aviad_phone
    data:
      message: command_broadcast_intent
      data:
        intent_package_name: com.tailscale.ipn
        intent_action: com.tailscale.ipn.{{ "DIS" if "Levy" in states('sensor.aviad_phone_wifi_connection')  else
          ""}}CONNECT_VPN
    enabled: false
  - if:
    - condition: template
      value_template: '{{ "Levy" in states(''sensor.aviad_phone_wifi_connection'')
        }}'
    then:
    - service: mqtt.publish
      metadata: {}
      data:
        topic: location/aviad_wifi
        payload: home
        retain: true
    else:
    - service: mqtt.publish
      metadata: {}
      data:
        topic: location/aviad_wifi
        payload: not_home
        retain: true
  mode: restart
- id: shabbat_1_1
  alias: Shabbat 1.1 - Kriat Shma when early shabbat
  description: ''
  trigger:
  - platform: template
    value_template: '{{ as_timestamp(states(''sensor.jewish_calendar_t_set_hakochavim''))|timestamp_custom(''%H:%M'',
      true) == as_timestamp(now())|timestamp_custom(''%H:%M'', true) }}'
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Shabbat
  - condition: state
    entity_id: binary_sensor.is_early_shabbat
    state: 'on'
  action:
  - service: chime_tts.say
    data:
      chime_path: choir
      cache: true
      announce: true
      tts_platform: google_translate
      language: iw
      join_players: true
      message: לא לשכוח לחזור על קריאת שמע
    target:
      entity_id:
      - media_player.sonos_kitchen
      - media_player.sonos_living_room
  mode: single
- id: test
  alias: test
  description: ''
  trigger: []
  condition: []
  action:
  - event: sync_sonarr_delete
    event_data: {}
  mode: single
- id: shabbat_1_2
  alias: Shabbat 1.2 - wake up
  description: ''
  trigger:
  - platform: time
    at: input_datetime.shabbat_morning_lights_on
  condition:
  - condition: state
    entity_id: input_select.mode
    state: Shabbat
  action:
  - repeat:
      count: 3
      sequence:
      - service: script.echo_say_the_time
        metadata: {}
        data: {}
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
  mode: single
- id: '1716104348579'
  alias: Kids in school routine
  description: ''
  trigger:
  - platform: time
    at: 08:30:00
    id: 'off'
  - platform: time
    at: '15:30:00'
    id: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.is_school_vacation
    state: 'off'
  - condition: state
    entity_id: input_select.mode
    state: Home
  - condition: time
    weekday:
    - sun
    - mon
    - tue
    - wed
    - thu
  action:
  - service: light.turn_{{ trigger.id }}
    target:
      entity_id: light.bathroom_bulb
  mode: single
